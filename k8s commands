kubectl create ns <namespace>
kubectl get all
kubectl get all -n default
kubectl config set-context --current --namespace=<namespace>
kubectl get ns
kubectl config set-context --current --namespace=default
kubectl get pod -n <namespace>
kubectl apply -f pod.yml --dry-run=client
kubectl describe pod <podname>
kubectl get pod -o yaml
kubectl get pod -o wide
curl -v <ip>:port/<applicationname>
curl -v 10.36.0.2:8080/java-web-app
kubectlget svc <servicename> -o wide
kubect get ep **ep=endpoint**
kubectl describe svc <servicename>
curl -v <serviceip>/<applicationname>
# to create secret for our dockerpasswd
kubectl create secret docker-registry <namewewant> \
--docker-server=<your-registry-server> \
--docker-username=<your-name> --docker-password=<your-pword>

#eg
kubectl create secret docker-registry dhcred \
--docker-server=docker.io --docker-username=mylandmarktech \
--docker-password=Mercy000014 
kubectl api-resources --namespaced=true
kubectl api-resources --namespaced=false
kubectl get rs 
kubectl get rs -n <namespace>
kubectl get all
kubectl scale rs <rsName> --replicas <noOfReplicas>
kubectl scale rs myapp-rs  --replicas 4 
kubectl explain ReplicationController | head -n 2